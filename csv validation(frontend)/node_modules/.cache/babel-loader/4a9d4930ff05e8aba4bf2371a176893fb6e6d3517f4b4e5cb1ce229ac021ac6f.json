{"ast":null,"code":"import _slicedToArray from \"C:/Users/rajen/OneDrive/Documents/csv validation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\rajen\\\\OneDrive\\\\Documents\\\\csv validation\\\\src\\\\components\\\\ValidateCSV.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CSVFileValidator from \"csv-file-validator\";\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\n// import \"./main.css\";\n\n// import \"./ValidateCSV.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar requiredError = function requiredError(headerName, rowNumber, columnNumber) {\n  return \"<div class=\\\"red\\\">\".concat(headerName, \" is required in the <strong>\").concat(rowNumber, \" row</strong> / <strong>\").concat(columnNumber, \" column</strong></div>\");\n};\nvar validateError = function validateError(headerName, rowNumber, columnNumber) {\n  return \"<div class=\\\"red\\\">\".concat(headerName, \" is not valid in the <strong>\").concat(rowNumber, \" row</strong> / <strong>\").concat(columnNumber, \" column</strong></div>\");\n};\nvar uniqueError = function uniqueError(headerName) {\n  return \"<div class=\\\"red\\\">\".concat(headerName, \" is not unique</div>\");\n};\nvar isEmailValid = function isEmailValid(email) {\n  var reqExp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n  return reqExp.test(email);\n};\nvar isPasswordValid = function isPasswordValid(password) {\n  return password.length >= 4;\n};\nvar isPhoneNumberValid = function isPhoneNumberValid(phonenumber) {\n  return phonenumber.length == 10;\n};\nvar config = {\n  headers: [{\n    name: \"firstname\",\n    inputName: \"firstname\",\n    required: true,\n    requiredError: requiredError\n  }, {\n    name: \"lastname\",\n    inputName: \"lastname\",\n    required: true,\n    requiredError: requiredError\n  }, {\n    name: \"email\",\n    inputName: \"email\",\n    required: true,\n    requiredError: requiredError,\n    unique: true,\n    uniqueError: uniqueError,\n    validate: isEmailValid,\n    validateError: validateError\n  }, {\n    name: \"password\",\n    inputName: \"password\",\n    required: true,\n    requiredError: requiredError,\n    validate: isPasswordValid,\n    validateError: validateError\n  }, {\n    name: \"phonenumber\",\n    inputName: \"phonenumber\",\n    required: true,\n    requiredError: requiredError,\n    validate: isPhoneNumberValid,\n    validateError: validateError\n  }]\n};\nvar headerCsvDownloadConfig = [{\n  label: \"firstname\",\n  key: \"firstname\"\n}, {\n  label: \"Last Name\",\n  key: \"lastname\"\n}, {\n  label: \"email\",\n  key: \"email\"\n}, {\n  label: \"password\",\n  key: \"password\"\n}, {\n  label: \"phonenumber\",\n  key: \"phonenumber\"\n}];\n// export default function ValidateCSV() {\nexport default function ValidateCSV() {\n  _s();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    csvData = _useState2[0],\n    setCsvData = _useState2[1];\n  var handleChange = function handleChange(e) {\n    CSVFileValidator(e.target.files[0], CSVConfig).then(function (csvData) {\n      csvData.inValidMessages.forEach(function (message) {\n        document.getElementById(\"invalidMessages\").insertAdjacentHTML(\"beforeend\", message);\n      });\n      setCsvData(csvData.data);\n    });\n  };\n  console.log({\n    csvData: csvData\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validate-csv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        id: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"invalidMessages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n      className: \"download\",\n      headers: headerCsvDownloadConfig,\n      data: csvData,\n      filename: \"demo.csv\",\n      target: \"_blank\",\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n\n// const [file, setFile] = useState()\n\n// function handleChange(event) {\n//   setFile(event.target.files[0])\n//   CSVFileValidator(file, config)\n//     .then(csvData => {\n//         csvData.data // Array of objects from file\n//         csvData.inValidMessages // Array of error messages\n//     })\n//     .catch(err => {})\n//   // setFile(event.target.files[0])\n// }\n\n// function handleSubmit(event) {\n//   event.preventDefault()\n//   const url = 'http://localhost:8080/api/csv/upload';\n//   const formData = new FormData();\n//   formData.append('file', file);\n//   // formData.append('fileName', file.name);\n//   const config = {\n//     headers: {\n//       'content-type': 'multipart/form-data',\n//     },\n//   };\n//   axios.post(url, formData, config).then((response) => {\n//     console.log(response.data);\n//   });\n\n// }\n\n// return (\n//   <div className=\"App\">\n//       <form onSubmit={handleSubmit}>\n//         <h1>React File Upload</h1>\n//         <input type=\"file\" onChange={handleChange}/>\n//         <button type=\"submit\">Upload</button>\n//       </form>\n//   </div>\n// );\n// }\n_s(ValidateCSV, \"REIaX/FdbVlCg8QJmQcaMkdS2Bc=\");\n_c = ValidateCSV;\nvar _c;\n$RefreshReg$(_c, \"ValidateCSV\");","map":{"version":3,"names":["React","useState","CSVFileValidator","CSVLink","axios","requiredError","headerName","rowNumber","columnNumber","validateError","uniqueError","isEmailValid","email","reqExp","test","isPasswordValid","password","length","isPhoneNumberValid","phonenumber","config","headers","name","inputName","required","unique","validate","headerCsvDownloadConfig","label","key","ValidateCSV","csvData","setCsvData","handleChange","e","target","files","CSVConfig","then","inValidMessages","forEach","message","document","getElementById","insertAdjacentHTML","data","console","log"],"sources":["C:/Users/rajen/OneDrive/Documents/csv validation/src/components/ValidateCSV.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport CSVFileValidator from \"csv-file-validator\";\nimport { CSVLink } from \"react-csv\";\nimport axios from 'axios';\n// import \"./main.css\";\n\n// import \"./ValidateCSV.scss\";\n\nlet requiredError = (headerName, rowNumber, columnNumber) => {\n  return `<div class=\"red\">${headerName} is required in the <strong>${rowNumber} row</strong> / <strong>${columnNumber} column</strong></div>`;\n};\nlet validateError = (headerName, rowNumber, columnNumber) => {\n  return `<div class=\"red\">${headerName} is not valid in the <strong>${rowNumber} row</strong> / <strong>${columnNumber} column</strong></div>`;\n};\nlet uniqueError = (headerName) => {\n  return `<div class=\"red\">${headerName} is not unique</div>`;\n};\nlet isEmailValid = function (email) {\n  let reqExp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n  return reqExp.test(email);\n};\nlet isPasswordValid = function (password) {\n  return password.length >= 4;\n};\nlet isPhoneNumberValid=function(phonenumber){\n  return phonenumber.length ==10;\n}\nlet config = {\n  headers: [\n    {\n      name: \"firstname\",\n      inputName: \"firstname\",\n      required: true,\n      requiredError\n    },\n    { name: \"lastname\", inputName: \"lastname\", required: true, requiredError },\n    {\n      name: \"email\",\n      inputName: \"email\",\n      required: true,\n      requiredError,\n      unique: true,\n      uniqueError,\n      validate: isEmailValid,\n      validateError\n    },\n    {\n      name: \"password\",\n      inputName: \"password\",\n      required: true,\n      requiredError,\n      validate: isPasswordValid,\n      validateError\n    },\n    {\n      name: \"phonenumber\",\n      inputName: \"phonenumber\",\n      required: true,\n      requiredError,\n      validate:isPhoneNumberValid,\n      validateError\n    }\n  ]\n};\nlet headerCsvDownloadConfig = [\n  { label: \"firstname\", key: \"firstname\" },\n  { label: \"Last Name\", key: \"lastname\" },\n  { label: \"email\", key: \"email\" },\n  { label: \"password\", key: \"password\" },\n  { label: \"phonenumber\", key: \"phonenumber\" }\n];\n// export default function ValidateCSV() {\n  export default function ValidateCSV() {\n    let [csvData, setCsvData] = useState(\"\");\n  \n    let handleChange = (e) => {\n      CSVFileValidator(e.target.files[0], CSVConfig).then((csvData) => {\n        csvData.inValidMessages.forEach((message) => {\n          document\n            .getElementById(\"invalidMessages\")\n            .insertAdjacentHTML(\"beforeend\", message);\n        });\n  \n        setCsvData(csvData.data);\n      });\n    };\n  \n    console.log({ csvData });\n  \n    return (\n      <div className=\"validate-csv\">\n        <div className=\"input-box\">\n          <input type=\"file\" accept=\".csv\" id=\"file\" onChange={handleChange} />\n          <div id=\"invalidMessages\" />\n        </div>\n        <CSVLink\n          className=\"download\"\n          headers={headerCsvDownloadConfig}\n          data={csvData}\n          filename=\"demo.csv\"\n          target=\"_blank\"\n        >\n          Download\n        </CSVLink>\n      </div>\n    );\n  }\n  \n\n// const [file, setFile] = useState()\n\n// function handleChange(event) {\n//   setFile(event.target.files[0])\n//   CSVFileValidator(file, config)\n//     .then(csvData => {\n//         csvData.data // Array of objects from file\n//         csvData.inValidMessages // Array of error messages\n//     })\n//     .catch(err => {})\n//   // setFile(event.target.files[0])\n// }\n\n// function handleSubmit(event) {\n//   event.preventDefault()\n//   const url = 'http://localhost:8080/api/csv/upload';\n//   const formData = new FormData();\n//   formData.append('file', file);\n//   // formData.append('fileName', file.name);\n//   const config = {\n//     headers: {\n//       'content-type': 'multipart/form-data',\n//     },\n//   };\n//   axios.post(url, formData, config).then((response) => {\n//     console.log(response.data);\n//   });\n\n// }\n\n// return (\n//   <div className=\"App\">\n//       <form onSubmit={handleSubmit}>\n//         <h1>React File Upload</h1>\n//         <input type=\"file\" onChange={handleChange}/>\n//         <button type=\"submit\">Upload</button>\n//       </form>\n//   </div>\n// );\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}