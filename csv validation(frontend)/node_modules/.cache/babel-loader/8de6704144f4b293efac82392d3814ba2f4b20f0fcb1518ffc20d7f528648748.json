{"ast":null,"code":"import _slicedToArray from \"C:/Users/rajen/OneDrive/Documents/csv validation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\rajen\\\\OneDrive\\\\Documents\\\\csv validation\\\\src\\\\components\\\\ValidateCSV.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import CSVFileValidator from \"csv-file-validator\";\n// import { CSVLink } from \"react-csv\";\n// import axios from 'axios';\n// // import \"./main.css\";\n\n// // import \"./ValidateCSV.scss\";\n\n// let requiredError = (headerName, rowNumber, columnNumber) => {\n//   return `<div class=\"red\">${headerName} is required in the <strong>${rowNumber} row</strong> / <strong>${columnNumber} column</strong></div>`;\n// };\n// let validateError = (headerName, rowNumber, columnNumber) => {\n//   return `<div class=\"red\">${headerName} is not valid in the <strong>${rowNumber} row</strong> / <strong>${columnNumber} column</strong></div>`;\n// };\n// let uniqueError = (headerName) => {\n//   return `<div class=\"red\">${headerName} is not unique</div>`;\n// };\n// let isEmailValid = function (email) {\n//   let reqExp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n//   return reqExp.test(email);\n// };\n// let isPasswordValid = function (password) {\n//   return password.length >= 4;\n// };\n// let isPhoneNumberValid=function(phonenumber){\n//   return phonenumber.length ==10;\n// }\n// let CSVConfig = {\n//   headers: [\n//     {\n//       name: \"First Name\",\n//       inputName: \"firstName\",\n//       required: true,\n//       requiredError\n//     },\n//     { name: \"Last Name\", inputName: \"lastName\", required: true, requiredError },\n//     {\n//       name: \"Email\",\n//       inputName: \"email\",\n//       required: true,\n//       requiredError,\n//       unique: true,\n//       uniqueError,\n//       validate: isEmailValid,\n//       validateError\n//     },\n//     {\n//       name: \"Password\",\n//       inputName: \"password\",\n//       required: true,\n//       requiredError,\n//       validate: isPasswordValid,\n//       validateError\n//     },\n//     {\n//       name: \"Phone Number\",\n//       inputName: \"phonenumber\",\n//       required: true,\n//       requiredError,\n//       validate:isPhoneNumberValid,\n//       validateError\n//     }\n//   ]\n// };\n// let headerCsvDownloadConfig = [\n//   { label: \"First Name\", key: \"firstName\" },\n//   { label: \"Last Name\", key: \"lastName\" },\n//   { label: \"Email\", key: \"email\" },\n//   { label: \"Password\", key: \"password\" },\n//   { label: \"Phone Number\", key: \"phonenumber\" }\n// ];\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ValidateCSV() {\n  _s();\n  //   const[firstName,setFirstName]=useState(\"\");\n  //   const[lastName,setLastName]=useState(\"\");\n  //   const[email,setEmail]=useState(\"\");\n  //   const[password,setPassword]=useState(\"\");\n  //   const[phonenumber,setPhoneNumber]=useState(\"\");\n  //   let [csvData, setCsvData] = useState(\"\");\n\n  //   let handleChange = (e) => {\n  //     CSVFileValidator(e.target.files[0], CSVConfig).then((csvData) => {\n  //       csvData.inValidMessages.forEach((message) => {\n  //         document\n  //           .getElementById(\"invalidMessages\")\n  //           .insertAdjacentHTML(\"beforeend\", message);\n  //       });\n\n  //       setCsvData(csvData.data);\n  //     });\n  //   };\n  //   var singleUploadForm = document.querySelector('#singleUploadForm');\n  //   var singleFileUploadInput = document.querySelector('#singleFileUploadInput');\n  //   var singleFileUploadError = document.querySelector('#singleFileUploadError');\n  //   var singleFileUploadSuccess = document.querySelector('#singleFileUploadSuccess');\n  //   console.log({ csvData });\n  //   function handleSubmit(){\n\n  //     let file=this.state.file\n  //     let formdata=new FormData()\n  //     formdata.append('file',file)\n  //      axios({\n  //          url:'http://localhost:8080/api/csv/upload',\n  //          method:'POST',\n  //          headers:{\n  //              authorization:'token'\n  //          },\n  //          data:formdata\n  //      }).then((res)=>{\n\n  //      })\n  //   }\n  //   singleUploadForm?.addEventListener('submit', function(event){\n  //     var files = singleFileUploadInput.files;\n  //     if(files.length === 0) {\n  //         singleFileUploadError.innerHTML = \"Please select a file\";\n  //         singleFileUploadError.style.display = \"block\";\n  //     }\n  //     handleSubmit(files[0]);\n  //     event.preventDefault();\n  // }, true);\n  //   return (\n  //   //   <div className=\"upload-container\">\n  //   //     {/* <div className=\"input-box>\" */}\n  //   //    <div className=\"validate-csv\" > \n  //   //   <div className=\"upload-content\">\n  //   //               <div className=\"single-upload\">\n  //   //                   <h3>Upload the CSV File </h3>\n  //   //                   <form id=\"singleUploadForm\" name=\"singleUploadForm\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n  //   //                       <input id=\"singleFileUploadInput\"   type=\"file\" name=\"file\"  onChange={handleChange}  className=\"file-input\" required />\n  //   //                       <button type=\"submit\" className=\"primary submit-btn\">Submit</button>\n  //   //                   </form>\n  //   //                   <div id=\"invalidMessages\" />\n  //   //                   <div className=\"upload-response\">\n  //   //                       <div id=\"singleFileUploadError\"></div>\n  //   //                       <div id=\"singleFileUploadSuccess\"></div>\n  //   //                   </div>\n  //   //               </div>\n  //   //               </div>\n\n  //   //  </div>\n\n  //            <div class=\"upload-container\">\n  //            <div class=\"upload-header\">\n  //                <h2>Import the CSV file into Mysql Database using Spring Boot Application</h2>\n  //            </div>\n  //            <div class=\"upload-content\">\n  //                <div class=\"single-upload\">\n  //                    <h3>Upload the CSV File </h3>\n  //                    <form id=\"singleUploadForm\" name=\"singleUploadForm\" onSubmit={handleSubmit}>\n  //                        <input id=\"singleFileUploadInput\" type=\"file\" name=\"file\" class=\"file-input\" onChange={handleChange} required />\n  //                        <button type=\"submit\" class=\"primary submit-btn\">Submit</button>\n  //                    </form>\n  //                     <div class=\"upload-response\">\n  //                        <div id=\"singleFileUploadError\"></div>\n  //                        <div id=\"singleFileUploadSuccess\"></div>\n  //                    </div>\n  //                </div>\n\n  //            </div>\n  //        </div>\n\n  //   );\n  // }\n\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1];\n  function handleChange(event) {\n    setFile(event.target.files[0]);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    var url = 'http://localhost:8080/api/csv/upload';\n    var formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', file.name);\n    var config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post(url, formData, config).then(function (response) {\n      console.log(response.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 3\n  }, this);\n}\n_s(ValidateCSV, \"r2TYF+Fv8c2PpNlLvKTx2zIPeds=\");\n_c = ValidateCSV;\nvar _c;\n$RefreshReg$(_c, \"ValidateCSV\");","map":{"version":3,"names":["React","useState","axios","ValidateCSV","file","setFile","handleChange","event","target","files","handleSubmit","preventDefault","url","formData","FormData","append","name","config","headers","post","then","response","console","log","data"],"sources":["C:/Users/rajen/OneDrive/Documents/csv validation/src/components/ValidateCSV.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import CSVFileValidator from \"csv-file-validator\";\n// import { CSVLink } from \"react-csv\";\n// import axios from 'axios';\n// // import \"./main.css\";\n\n// // import \"./ValidateCSV.scss\";\n\n// let requiredError = (headerName, rowNumber, columnNumber) => {\n//   return `<div class=\"red\">${headerName} is required in the <strong>${rowNumber} row</strong> / <strong>${columnNumber} column</strong></div>`;\n// };\n// let validateError = (headerName, rowNumber, columnNumber) => {\n//   return `<div class=\"red\">${headerName} is not valid in the <strong>${rowNumber} row</strong> / <strong>${columnNumber} column</strong></div>`;\n// };\n// let uniqueError = (headerName) => {\n//   return `<div class=\"red\">${headerName} is not unique</div>`;\n// };\n// let isEmailValid = function (email) {\n//   let reqExp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;\n//   return reqExp.test(email);\n// };\n// let isPasswordValid = function (password) {\n//   return password.length >= 4;\n// };\n// let isPhoneNumberValid=function(phonenumber){\n//   return phonenumber.length ==10;\n// }\n// let CSVConfig = {\n//   headers: [\n//     {\n//       name: \"First Name\",\n//       inputName: \"firstName\",\n//       required: true,\n//       requiredError\n//     },\n//     { name: \"Last Name\", inputName: \"lastName\", required: true, requiredError },\n//     {\n//       name: \"Email\",\n//       inputName: \"email\",\n//       required: true,\n//       requiredError,\n//       unique: true,\n//       uniqueError,\n//       validate: isEmailValid,\n//       validateError\n//     },\n//     {\n//       name: \"Password\",\n//       inputName: \"password\",\n//       required: true,\n//       requiredError,\n//       validate: isPasswordValid,\n//       validateError\n//     },\n//     {\n//       name: \"Phone Number\",\n//       inputName: \"phonenumber\",\n//       required: true,\n//       requiredError,\n//       validate:isPhoneNumberValid,\n//       validateError\n//     }\n//   ]\n// };\n// let headerCsvDownloadConfig = [\n//   { label: \"First Name\", key: \"firstName\" },\n//   { label: \"Last Name\", key: \"lastName\" },\n//   { label: \"Email\", key: \"email\" },\n//   { label: \"Password\", key: \"password\" },\n//   { label: \"Phone Number\", key: \"phonenumber\" }\n// ];\nimport React, {useState} from 'react';\nimport axios from 'axios';\nexport default function ValidateCSV() {\n  \n//   const[firstName,setFirstName]=useState(\"\");\n//   const[lastName,setLastName]=useState(\"\");\n//   const[email,setEmail]=useState(\"\");\n//   const[password,setPassword]=useState(\"\");\n//   const[phonenumber,setPhoneNumber]=useState(\"\");\n//   let [csvData, setCsvData] = useState(\"\");\n\n//   let handleChange = (e) => {\n//     CSVFileValidator(e.target.files[0], CSVConfig).then((csvData) => {\n//       csvData.inValidMessages.forEach((message) => {\n//         document\n//           .getElementById(\"invalidMessages\")\n//           .insertAdjacentHTML(\"beforeend\", message);\n//       });\n\n//       setCsvData(csvData.data);\n//     });\n//   };\n//   var singleUploadForm = document.querySelector('#singleUploadForm');\n//   var singleFileUploadInput = document.querySelector('#singleFileUploadInput');\n//   var singleFileUploadError = document.querySelector('#singleFileUploadError');\n//   var singleFileUploadSuccess = document.querySelector('#singleFileUploadSuccess');\n//   console.log({ csvData });\n//   function handleSubmit(){\n\n//     let file=this.state.file\n//     let formdata=new FormData()\n//     formdata.append('file',file)\n//      axios({\n//          url:'http://localhost:8080/api/csv/upload',\n//          method:'POST',\n//          headers:{\n//              authorization:'token'\n//          },\n//          data:formdata\n//      }).then((res)=>{\n\n//      })\n//   }\n//   singleUploadForm?.addEventListener('submit', function(event){\n//     var files = singleFileUploadInput.files;\n//     if(files.length === 0) {\n//         singleFileUploadError.innerHTML = \"Please select a file\";\n//         singleFileUploadError.style.display = \"block\";\n//     }\n//     handleSubmit(files[0]);\n//     event.preventDefault();\n// }, true);\n//   return (\n//   //   <div className=\"upload-container\">\n//   //     {/* <div className=\"input-box>\" */}\n//   //    <div className=\"validate-csv\" > \n//   //   <div className=\"upload-content\">\n//   //               <div className=\"single-upload\">\n//   //                   <h3>Upload the CSV File </h3>\n//   //                   <form id=\"singleUploadForm\" name=\"singleUploadForm\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n//   //                       <input id=\"singleFileUploadInput\"   type=\"file\" name=\"file\"  onChange={handleChange}  className=\"file-input\" required />\n//   //                       <button type=\"submit\" className=\"primary submit-btn\">Submit</button>\n//   //                   </form>\n//   //                   <div id=\"invalidMessages\" />\n//   //                   <div className=\"upload-response\">\n//   //                       <div id=\"singleFileUploadError\"></div>\n//   //                       <div id=\"singleFileUploadSuccess\"></div>\n//   //                   </div>\n//   //               </div>\n//   //               </div>\n               \n//   //  </div>\n  \n\n//            <div class=\"upload-container\">\n//            <div class=\"upload-header\">\n//                <h2>Import the CSV file into Mysql Database using Spring Boot Application</h2>\n//            </div>\n//            <div class=\"upload-content\">\n//                <div class=\"single-upload\">\n//                    <h3>Upload the CSV File </h3>\n//                    <form id=\"singleUploadForm\" name=\"singleUploadForm\" onSubmit={handleSubmit}>\n//                        <input id=\"singleFileUploadInput\" type=\"file\" name=\"file\" class=\"file-input\" onChange={handleChange} required />\n//                        <button type=\"submit\" class=\"primary submit-btn\">Submit</button>\n//                    </form>\n//                     <div class=\"upload-response\">\n//                        <div id=\"singleFileUploadError\"></div>\n//                        <div id=\"singleFileUploadSuccess\"></div>\n//                    </div>\n//                </div>\n              \n//            </div>\n//        </div>\n   \n    \n//   );\n// }\n\nconst [file, setFile] = useState()\n\nfunction handleChange(event) {\n  setFile(event.target.files[0])\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault()\n  const url = 'http://localhost:8080/api/csv/upload';\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('fileName', file.name);\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data',\n    },\n  };\n  axios.post(url, formData, config).then((response) => {\n    console.log(response.data);\n  });\n\n}\n\nreturn (\n  <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <h1>React File Upload</h1>\n        <input type=\"file\" onChange={handleChange}/>\n        <button type=\"submit\">Upload</button>\n      </form>\n  </div>\n);\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAC1B,eAAe,SAASC,WAAW,GAAG;EAAA;EAEtC;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;;EAEA,gBAAwBF,QAAQ,EAAE;IAAA;IAA3BG,IAAI;IAAEC,OAAO;EAEpB,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC;EAEA,SAASC,YAAY,CAACH,KAAK,EAAE;IAC3BA,KAAK,CAACI,cAAc,EAAE;IACtB,IAAMC,GAAG,GAAG,sCAAsC;IAClD,IAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAC7BS,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEX,IAAI,CAACY,IAAI,CAAC;IACtC,IAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACDhB,KAAK,CAACiB,IAAI,CAACP,GAAG,EAAEC,QAAQ,EAAEI,MAAM,CAAC,CAACG,IAAI,CAAC,UAACC,QAAQ,EAAK;MACnDC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC;EAEJ;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB;MAAM,QAAQ,EAAEd,YAAa;MAAA,wBAC3B;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEJ;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5C;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAChC;IAAA;IAAA;IAAA;EAAA,QACL;AAER;AAAC,GAhIuBH,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}